import { Button, VerticalBox, TextEdit, LineEdit, ComboBox } from "std-widgets.slint";
import { Buttoner, CalculateLineEdit, CalculateText } from "my-components.slint";
import { CalculateComponent } from "calculate-window.slint";
import { AddNew } from "add-new.slint";

export component AppWindow inherits Window {
    property <color> first_back: #242a3b;
    property <color> second_back: #39516e;
    property <color> third_back: #3c75aa;
    property <color> font_color: #ffffffcc;
    property <length> border_radius_val: 10px;

    in-out property <int> active-tab: 0;
    in-out property <string> selected_timespan: "Daily";
    in-out property <float> cost;
    in-out property <float> day_value;
    in-out property <float> week_value;
    in-out property <float> month_value;
    in-out property <float> year_value;

    preferred-height: 380px;
    min-width: 350px;
    callback request-change-cost-estimations();

    icon: @image-url("icons/graph.svg");
    background: @linear-gradient(135deg, first_back 15%, second_back 50%, third_back 100%);
    GridLayout {
        Row {
            HorizontalLayout { // Title 
                padding: 3px;
                spacing: root.width/ 6;
                height: 60px;
               Text {
                   text: "My Finance";
                   preferred-height: root.height / 3;
                   color: font_color;
                   font-italic: true;
                   font-size: 35px;
                   vertical-alignment: top;
                   horizontal-alignment: center;
               }
            }
        }
        VerticalLayout {
            preferred-height: 200px;
            Rectangle {
                background:= Image { 
                    source: root.icon;
                    image-fit: ImageFit.contain;
                }
                clip: true;
                AddNew { // Add new
                    x: root.active-tab == 0 ? 0 : root.active-tab < 0 ? - self.width - 1px : parent.width + 1px;
                    animate x { duration: 125ms; easing: ease; }
                }
                CalculateComponent {
                    background: second_back;
                    x: root.active-tab == 1 ? 0 : root.active-tab < 1 ? - self.width - 1px : parent.width + 1px;
                    cost <=> root.cost;
                    day_value <=>  root.day_value;
                    week_value <=>  root.week_value;
                    month_value <=>  root.month_value;
                    year_value <=>  root.year_value;
                    selected_timespan <=>  root.selected_timespan;
                    request-change-cost-estimations => { root.request-change-cost-estimations(); }
                }
                Rectangle { // Settings
                    background: third_back;
                    x: root.active-tab == 2 ? 0 : root.active-tab < 2 ? - self.width - 1px : parent.width + 1px;
                    animate x { duration: 125ms; easing: ease; }
                    Text {
                        text: "Will be Implemented Eventually :D";
                    }
                }
            }
            tab_bar := HorizontalLayout {
                // spacing: 1px;
                Buttoner {
                    border-radius: 1px;
                    text: "Add new";
                    clicked => { root.active-tab = 0; }
                }
                Buttoner {
                    border-radius: 1px;
                    text: "Calculate";
                    clicked => { root.active-tab = 1; }
                }
                Buttoner {
                    border-radius: 1px;
                    text: "Settings";
                    clicked => { root.active-tab = 2; }
                }
            }
        }
    }
}

